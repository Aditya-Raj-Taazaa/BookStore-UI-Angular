{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthorService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAuthors(page = 1, pageSize = 10) {\n    const body = {\n      page,\n      pageSize\n    };\n    return this.http.post('/api/Authors/GetAuthors', body).pipe(map(response => response.data));\n  }\n  getAuthorDetail() {\n    return this.http.get('/api/Authors/{{}}').pipe();\n  }\n  static {\n    this.ɵfac = function AuthorService_Factory(t) {\n      return new (t || AuthorService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthorService,\n      factory: AuthorService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { AuthorService };","map":{"version":3,"names":["map","AuthorService","constructor","http","getAuthors","page","pageSize","body","post","pipe","response","data","getAuthorDetail","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\DEV\\BookStoreAPI-UI\\src\\app\\authorlist\\author.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Iauthor, IauthorDetail } from './author.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorService {\n  constructor(private http: HttpClient) {}\n\n  getAuthors(page: number = 1, pageSize: number = 10): Observable<Iauthor[]> {\n    const body = { page, pageSize };\n    return this.http.post<any>('/api/Authors/GetAuthors', body)\n      .pipe(map(response => response.data));\n  }\n\n  getAuthorDetail() : Observable<IauthorDetail>\n  {\n    return this.http.get<any>('/api/Authors/{{}}')\n      .pipe()\n  }\n}"],"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;AAGpC,MAGaC,aAAa;EACxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,UAAUA,CAACC,IAAA,GAAe,CAAC,EAAEC,QAAA,GAAmB,EAAE;IAChD,MAAMC,IAAI,GAAG;MAAEF,IAAI;MAAEC;IAAQ,CAAE;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACK,IAAI,CAAM,yBAAyB,EAAED,IAAI,CAAC,CACxDE,IAAI,CAACT,GAAG,CAACU,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;EACzC;EAEAC,eAAeA,CAAA;IAEb,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAM,mBAAmB,CAAC,CAC3CJ,IAAI,EAAE;EACX;;;uBAbWR,aAAa,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbhB,aAAa;MAAAiB,OAAA,EAAbjB,aAAa,CAAAkB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA;;SAEPnB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}