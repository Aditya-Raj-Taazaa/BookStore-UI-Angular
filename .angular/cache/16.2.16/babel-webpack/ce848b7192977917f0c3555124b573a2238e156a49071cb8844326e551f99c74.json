{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AuthorlistComponent = class AuthorlistComponent {\n  constructor(authorService) {\n    this.authorService = authorService;\n    this.authors = [];\n    this.displayedColumns = ['id', 'name', 'details'];\n  }\n  ngOnInit() {\n    this.authorService.getAuthors().subscribe({\n      next: authors => this.authors = authors,\n      error: err => {\n        console.error('Author API error:', err);\n        this.authors = [];\n      }\n    });\n  }\n  showDetails(id) {\n    this.authorService.getAuthorDetail(id).subscribe({\n      next: detail => this.selectedAuthorDetail = detail,\n      error: error => {\n        console.log(`Error in Fetching detail with id: ${id}`);\n        this.selectedAuthorDetail = undefined;\n      }\n    });\n  }\n  openDialog() {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      data: {\n        name: this.name(),\n        animal: this.animal()\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result !== undefined) {\n        this.animal.set(result);\n      }\n    });\n  }\n};\nAuthorlistComponent = __decorate([Component({\n  selector: 'app-authorlist',\n  templateUrl: './authorlist.component.html',\n  styleUrls: ['./authorlist.component.css']\n})], AuthorlistComponent);\nexport { AuthorlistComponent };","map":{"version":3,"names":["Component","AuthorlistComponent","constructor","authorService","authors","displayedColumns","ngOnInit","getAuthors","subscribe","next","error","err","console","showDetails","id","getAuthorDetail","detail","selectedAuthorDetail","log","undefined","openDialog","dialogRef","dialog","open","DialogOverviewExampleDialog","data","name","animal","afterClosed","result","set","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\DEV\\BookStoreAPI-UI\\src\\app\\authorlist\\authorlist.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthorService } from './author.service';\nimport { Iauthor, IauthorDetail } from './author.model';\nimport {ChangeDetectionStrategy, Component, inject, model, signal, OnInit} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogRef,\n  MatDialogTitle,\n} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-authorlist',\n  templateUrl: './authorlist.component.html',\n  styleUrls: ['./authorlist.component.css']\n})\nexport class AuthorlistComponent implements OnInit {\n  authors: Iauthor[] = [];\n  displayedColumns: string[] = ['id', 'name','details'];\n  selectedAuthorDetail?: IauthorDetail;\n\n  constructor(private authorService: AuthorService) {}\n\n  ngOnInit() {\n    this.authorService.getAuthors().subscribe({\n      next: (authors) => this.authors = authors,\n      error: (err) => {\n        console.error('Author API error:', err);\n        this.authors = [];\n      }\n    });\n  }\n\n  showDetails(id:number){\n    this.authorService.getAuthorDetail(id).subscribe({\n      next: (detail) => this.selectedAuthorDetail = detail,\n      error: (error) => {\n        console.log(`Error in Fetching detail with id: ${id}`);\n        this.selectedAuthorDetail = undefined;\n      }\n    });\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      data: {name: this.name(), animal: this.animal()},\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result !== undefined) {\n        this.animal.set(result);\n      }\n    });\n  }\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AA4BjD,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAK9BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAJjC,KAAAC,OAAO,GAAc,EAAE;IACvB,KAAAC,gBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAC,SAAS,CAAC;EAGF;EAEnDC,QAAQA,CAAA;IACN,IAAI,CAACH,aAAa,CAACI,UAAU,EAAE,CAACC,SAAS,CAAC;MACxCC,IAAI,EAAGL,OAAO,IAAK,IAAI,CAACA,OAAO,GAAGA,OAAO;MACzCM,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,mBAAmB,EAAEC,GAAG,CAAC;QACvC,IAAI,CAACP,OAAO,GAAG,EAAE;MACnB;KACD,CAAC;EACJ;EAEAS,WAAWA,CAACC,EAAS;IACnB,IAAI,CAACX,aAAa,CAACY,eAAe,CAACD,EAAE,CAAC,CAACN,SAAS,CAAC;MAC/CC,IAAI,EAAGO,MAAM,IAAK,IAAI,CAACC,oBAAoB,GAAGD,MAAM;MACpDN,KAAK,EAAGA,KAAK,IAAI;QACfE,OAAO,CAACM,GAAG,CAAC,qCAAqCJ,EAAE,EAAE,CAAC;QACtD,IAAI,CAACG,oBAAoB,GAAGE,SAAS;MACvC;KACD,CAAC;EACJ;EAEAC,UAAUA,CAAA;IACR,MAAMC,SAAS,GAAG,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,2BAA2B,EAAE;MAC9DC,IAAI,EAAE;QAACC,IAAI,EAAE,IAAI,CAACA,IAAI,EAAE;QAAEC,MAAM,EAAE,IAAI,CAACA,MAAM;MAAE;KAChD,CAAC;IAEFN,SAAS,CAACO,WAAW,EAAE,CAACpB,SAAS,CAACqB,MAAM,IAAG;MACzCjB,OAAO,CAACM,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAIW,MAAM,KAAKV,SAAS,EAAE;QACxB,IAAI,CAACQ,MAAM,CAACG,GAAG,CAACD,MAAM,CAAC;;IAE3B,CAAC,CAAC;EACJ;CAED;AAxCY5B,mBAAmB,GAAA8B,UAAA,EAL/B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWjC,mBAAmB,CAwC/B;SAxCYA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}